fig = plt.figure()
ax = fig.gca(projection='3d')

# add together the attack stats of the sweepers, then account for magnitude
sumStats0 = physBulkArray[0] + physSpdArray[0] + spBulkArray[0] + spSpdArray[0]
sumStats0 = int(sumStats0)
sumStats0 = sumStats0 / 100000000
print(sumStats0)

# same process for secondary attribute (i.e. HP or speed)
sumStats1 = physBulkArray[1] + physSpdArray[1] + spBulkArray[1] + spSpdArray[1]
sumStats1 = int(sumStats1)
sumStats1 = sumStats1 / 100000000

# same process for tank + stealth rocker, less offensive team members
tankStats = tankArray[0] + tankArray[1]
tankStats = int(tankStats)
tankStats = tankStats / 100000000

stealthRockStats = stealthRockArray[1] + stealthRockArray[1]
stealthRockStats = int(stealthRockStats)
stealhRockStats = stealthRockStats / 100000000

# initialize 2D matrix for matplotlib to use
if sumStats0 > sumStats1:
    a = np.arange(-1 * sumStats1, sumStats0 , 1)
    b = np.arange(-1 * tankStats, stealthRockStats, 1)
else:
    a = np.arange(-1 * sumStats0, sumStats1, 1)
    b = np.arange(-1 * tankStats, stealthRockStats, 1)

a, b = np.meshgrid(a, b)
r = np.sqrt(a**2 + b**2)
z = np.sin(r)

surf = ax.plot_surface(a, b, z, linewidth=0, antialiased = False)

ax.set_zlim(-1000, 1000)
ax.zaxis.set_major_locator(LinearLocator(10))
ax.zaxis.set_major_formatter(FormatStrFormatter('%.02f'))

fig.colorbar(surf, shrink=0.5, aspect=5)
plt.show()
