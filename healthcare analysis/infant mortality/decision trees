"""
for decision tree, split between variables to make a diagnosis
I based the code off of the following link:
    https://levelup.gitconnected.com/building-a-decision-tree-from-scratch-in-python-machine-learning-from-scratch-part-ii-6e2e56265b19
"""
from sklearn.metrics import mean_squared_error
from math import sqrt
from sklearn.ensemble import RandomForestRegressor

# mean sum squared error which we use in supervised learning
def mse(h, y):
    return sqrt(mean_squared_error(h, y))

# call an instantiation of the class which creates the scope of the tree
reg = RandomForestRegressor(
    n_estimators=1, # essentially decision tree
    max_depth=2, # maximum depth of the tree (i.e. n leaves)
    bootstrap=False,# the whole dataset is used to build the tree
)

# predict values for the tree with regression and check their precision
reg.fit(xRegression, yRegression)
preds = reg.predict(xRegression)
score = sklearn.metrics.r2_score(yRegression, preds)

# yRegression = Y2 by definition, so MSE must be 0
mse = mse(yRegression, Y1)

print(mse)
print(score) # r^2 is about 90%, so the model is very accurate
