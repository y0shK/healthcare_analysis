import pandas as pd
import matplotlib.pyplot as plt
from scipy.stats.stats import pearsonr

"""
Goal: use coefficient correlation + t-distribution histograms for analyzing Alzheimer's results

Links referenced:
-https://stackoverflow.com/questions/43144938/python-3-5-list-object-has-no-attribute-min-and-unorderable-types-str-i
-https://stackoverflow.com/questions/9539921/how-do-i-create-a-python-function-with-optional-arguments/9539945
-https://en.wikipedia.org/wiki/Pearson_correlation_coefficient
-https://stackoverflow.com/questions/3949226/calculating-pearson-correlation-and-significance-in-python
-https://stackoverflow.com/questions/3425439/why-does-corrcoef-return-a-matrix/3425548#3425548
-https://stackoverflow.com/questions/38650550/cant-get-y-axis-on-matplotlib-histogram-to-display-probabilities
-https://towardsdatascience.com/histograms-and-density-plots-in-python-f6bda88f5ac0
"""

longitudinalData = '/home/yash/Desktop/datasets/oasis_longitudinal.csv'
alzData = pd.read_csv(longitudinalData)
print(alzData)

# primary variables to analyze
mse = alzData['MMSE'].values.tolist() # mental state examination
eTIV = alzData['eTIV'].values.tolist() # estimated total intracranial volume
age = alzData['Age'].values.tolist()
group = alzData['Group'].values.tolist() # Alzheimer's diagnosis

print(mse)
print(eTIV)
print(age)
print(group)

alzDict = {'MSE': mse, 'eTIV': eTIV, 'Age': age, 'Group': group}

df = pd.DataFrame(alzDict, columns=['MSE', 'eTIV', 'Age', 'Group'])
print(df)
